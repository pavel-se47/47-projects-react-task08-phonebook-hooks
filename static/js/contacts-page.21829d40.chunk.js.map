{"version":3,"file":"static/js/contacts-page.21829d40.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/MainNav/MainNav.module.css?5b3b","components/MainNav/MainNav.js","webpack://react-homework-template/./src/components/UserMenu/UserMenu.module.css?1b0e","components/UserMenu/UserMenu.js","webpack://react-homework-template/./src/components/AuthNav/AuthNav.module.css?aff0","components/AuthNav/AuthNav.js","webpack://react-homework-template/./src/components/ContactsPage/AppBar/AppBar.module.css?a409","components/ContactsPage/AppBar/AppBar.js","redux/phonebook-operations.js","webpack://react-homework-template/./src/components/ContactsPage/PhonebookContacts/PhonebookContacts.module.css?f890","components/ContactsPage/PhonebookContacts/PhonebookContacts.js","components/ContactsPage/PhonebookForm/PhonebookForm.js","webpack://react-homework-template/./src/components/ContactsPage/ContactsPage.module.css?5257","components/ContactsPage/ContactsPage.js","../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/phonebook-selectors.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"phonebookLink\":\"MainNav_phonebookLink__UK1tz\"};","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport authSelector from 'redux/auth-selector';\nimport styles from './MainNav.module.css';\n\nexport default function MainNav() {\n  const isAuthenticated = useSelector(authSelector.getIsAuthenticated);\n\n  return (\n    <nav>\n      <NavLink to=\"/\" className={styles.phonebookLink}>\n        Home\n      </NavLink>\n      {isAuthenticated && (\n        <NavLink to=\"/contacts\" className={styles.phonebookLink}>\n          Contacts\n        </NavLink>\n      )}\n    </nav>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"phonebookContainer\":\"UserMenu_phonebookContainer__5QChS\",\"userAvatar\":\"UserMenu_userAvatar__2gK7Y\",\"userName\":\"UserMenu_userName__mKDP5\",\"button\":\"UserMenu_button__C-Or6\"};","import React, { useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport defaultAvatar from './default-avatar.png';\nimport authSelector from 'redux/auth-selector';\nimport authOperations from 'redux/auth-operations';\nimport styles from './UserMenu.module.css';\n\nexport default function UserMenu() {\n  const dispatch = useDispatch();\n  const name = useSelector(authSelector.getUserName);\n\n  const onLogout = useCallback(\n    () => dispatch(authOperations.logoutUser()),\n    [dispatch]\n  );\n\n  return (\n    <div className={styles.phonebookContainer}>\n      <img\n        src={defaultAvatar}\n        alt=\"avatar\"\n        width=\"32\"\n        className={styles.userAvatar}\n      />\n      <span className={styles.userName}>Welcome, {name}</span>\n      <button className={styles.button} type=\"button\" onClick={onLogout}>\n        LogOut\n      </button>\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"phonebookLink\":\"AuthNav_phonebookLink__x-5vL\"};","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport styles from './AuthNav.module.css';\n\nconst AuthNav = () => (\n  <div>\n    <NavLink to=\"/register\" className={styles.phonebookLink}>\n      Register\n    </NavLink>\n    <NavLink to=\"/login\" className={styles.phonebookLink}>\n      LogIn\n    </NavLink>\n  </div>\n);\n\nexport default AuthNav;\n","// extracted by mini-css-extract-plugin\nexport default {\"phonebookHeader\":\"AppBar_phonebookHeader__120fJ\"};","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport Navigation from '../../MainNav/MainNav';\nimport UserMenu from '../../UserMenu/UserMenu';\nimport AuthNav from '../../AuthNav/AuthNav';\nimport authSelector from 'redux/auth-selector';\nimport styles from './AppBar.module.css';\n\nexport default function AppBar() {\n  const isAuthenticated = useSelector(authSelector.getIsAuthenticated);\n\n  return (\n    <header className={styles.phonebookHeader}>\n      <Navigation />\n      {isAuthenticated ? <UserMenu /> : <AuthNav />}\n    </header>\n  );\n}\n","import actions from '../redux/phonebook-actions';\nimport axios from 'axios';\n\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com/';\n\nconst fetchAllContacts = () => async dispatch => {\n  dispatch(actions.fetchAllContactsRequest());\n\n  try {\n    const response = await axios.get('/contacts');\n    dispatch(actions.fetchAllContactsSuccess(response.data));\n  } catch (error) {\n    dispatch(actions.fetchAllContactsError(error.message));\n  }\n};\n\nconst addContact = (name, number) => async dispatch => {\n  dispatch(actions.addContactRequest());\n  try {\n    const response = await axios.post('/contacts', { name, number });\n    dispatch(actions.addContactSuccess(response.data));\n  } catch (error) {\n    dispatch(actions.addContactError(error.message));\n  }\n};\n\nconst deleteContact = id => async dispatch => {\n  dispatch(actions.deleteContactRequest());\n\n  try {\n    await axios.delete(`/contacts/${id}`);\n    dispatch(actions.deleteContactSuccess(id));\n  } catch (error) {\n    dispatch(actions.deleteContactError(error.message));\n  }\n};\n\n// eslint-disable-next-line\nexport default { fetchAllContacts, addContact, deleteContact };\n","// extracted by mini-css-extract-plugin\nexport default {\"phonebookContacts\":\"PhonebookContacts_phonebookContacts__s9SN9\",\"title\":\"PhonebookContacts_title__F4zNS\",\"subtitle\":\"PhonebookContacts_subtitle__uBOsR\",\"contactName\":\"PhonebookContacts_contactName__KxhBO\",\"border\":\"PhonebookContacts_border__Z05KF\",\"input\":\"PhonebookContacts_input__AWKxM\",\"label\":\"PhonebookContacts_label__n7ZI2\",\"button\":\"PhonebookContacts_button__PpsOP\"};","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport operations from 'redux/phonebook-operations';\nimport actions from 'redux/phonebook-actions';\nimport styles from './PhonebookContacts.module.css';\nimport phonebookSelectors from 'redux/phonebook-selectors';\n\nexport default function PhonebookContacts() {\n  const dispatch = useDispatch();\n\n  const contacts = useSelector(phonebookSelectors.getFilteredContacts);\n  const filter = useSelector(phonebookSelectors.getFilter);\n\n  const addDeleteContact = id => dispatch(operations.deleteContact(id));\n\n  const addFilterResult = e => dispatch(actions.filterContact(e.target.value));\n\n  return (\n    <div className={styles.phonebookContacts}>\n      <p className={styles.title}>My contacts</p>\n\n      <div className={styles.border}>\n        <label className={styles.label}>\n          <input\n            type=\"text\"\n            className={styles.input}\n            name=\"filter\"\n            value={filter}\n            placeholder=\"Enter name for search\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            onChange={addFilterResult}\n          />\n        </label>\n        <ul>\n          {contacts.map(contact => (\n            <li key={contact.id} className={styles.contactName}>\n              {contact.name}: {contact.number}\n              <button\n                type=\"button\"\n                className={styles.button}\n                onClick={() => addDeleteContact(contact.id)}\n              >\n                Delete\n              </button>\n            </li>\n          ))}\n        </ul>\n        <p className={styles.subtitle}>Total contacts: {contacts.length}</p>\n      </div>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport operations from 'redux/phonebook-operations';\nimport phonebookSelectors from 'redux/phonebook-selectors';\nimport styles from './PhonebookForm.module.css';\nimport { ThreeDots } from 'react-loader-spinner';\n\nexport default function PhonebookForm() {\n  const dispatch = useDispatch();\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  useEffect(() => {\n    dispatch(operations.fetchAllContacts());\n  }, [dispatch]);\n\n  const contacts = useSelector(phonebookSelectors.getAllContacts);\n  const isLoadingContacts = useSelector(phonebookSelectors.getLoadingContacts);\n\n  const nameChange = e => {\n    setName(e.currentTarget.value);\n  };\n\n  const numberChange = e => {\n    setNumber(e.currentTarget.value);\n  };\n\n  const formSubmit = e => {\n    e.preventDefault();\n    if (\n      contacts.find(\n        contact =>\n          contact.name.toLowerCase() === name.toLowerCase() ||\n          contact.number === number\n      )\n    ) {\n      return alert(\n        'Error! A contact with the same name/number already exists!'\n      );\n    }\n    dispatch(operations.addContact(name, number));\n    formReset();\n  };\n\n  const formReset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <>\n      <div className={styles.loading}>\n        {isLoadingContacts && (\n          <ThreeDots\n            height=\"80\"\n            width=\"80\"\n            radius=\"9\"\n            color=\"skyblue\"\n            ariaLabel=\"three-dots-loading\"\n            wrapperStyle={{}}\n            wrapperClassName=\"\"\n            visible={true}\n          />\n        )}\n      </div>\n      <p className={styles.title}>Add new contact</p>\n      <form className={styles.phonebookForm} onSubmit={formSubmit}>\n        <div className={styles.border}>\n          <label className={styles.label}>\n            <input\n              type=\"text\"\n              className={styles.input}\n              name=\"name\"\n              value={name}\n              placeholder=\"Enter Name\"\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n              required\n              onChange={nameChange}\n            />\n          </label>\n          <label className={styles.label}>\n            <input\n              type=\"tel\"\n              className={styles.input}\n              name=\"number\"\n              value={number}\n              placeholder=\"Enter Number\"\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n              required\n              onChange={numberChange}\n            />\n          </label>\n          <button type=\"submit\" className={styles.button}>\n            Add contact\n          </button>\n        </div>\n      </form>\n    </>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"pb\":\"ContactsPage_pb__PNH7C\"};","import React, { Component } from 'react';\nimport AppBar from './AppBar/AppBar';\nimport PhonebookContacts from './PhonebookContacts/PhonebookContacts';\nimport PhonebookForm from './PhonebookForm/PhonebookForm';\nimport styles from './ContactsPage.module.css';\n\nclass ContactsPage extends Component {\n  render() {\n    return (\n      <>\n        <div className={styles.pb}>\n          <AppBar />\n          <PhonebookForm />\n          <PhonebookContacts />\n        </div>\n      </>\n    );\n  }\n}\n\nexport default ContactsPage;\n","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import { createSelector } from '@reduxjs/toolkit';\n\nconst getAllContacts = state => state.contacts.items;\n\nconst getLoadingContacts = state => state.contacts.load;\n\nconst getFilter = state => state.contacts.filter;\n\nconst getFilteredContacts = createSelector(\n  [getAllContacts, getFilter],\n  (allContacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return allContacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter)\n    );\n  }\n);\n\n// eslint-disable-next-line\nexport default {\n  getAllContacts,\n  getLoadingContacts,\n  getFilter,\n  getFilteredContacts,\n};\n"],"names":["MainNav","isAuthenticated","useSelector","authSelector","to","className","styles","UserMenu","dispatch","useDispatch","name","onLogout","useCallback","authOperations","src","defaultAvatar","alt","width","type","onClick","AppBar","axios","actions","response","data","message","number","id","PhonebookContacts","contacts","phonebookSelectors","filter","value","placeholder","pattern","title","required","onChange","e","target","map","contact","operations","length","PhonebookForm","useState","setName","setNumber","useEffect","isLoadingContacts","formReset","height","radius","color","ariaLabel","wrapperStyle","wrapperClassName","visible","onSubmit","preventDefault","find","toLowerCase","alert","currentTarget","ContactsPage","Component","NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","i","createCacheKeyComparator","cache","equals","entry","get","key","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","getAllContacts","state","items","getFilter","getLoadingContacts","load","getFilteredContacts","allContacts","normalizedFilter","includes"],"sourceRoot":""}